<?php
/**
 * Created by PhpStorm.
 * User: jerry
 * Date: 2017/10/12
 * Time: 10:09
 */

namespace app\bo\libs;

use app\bo\model\BudgetColumn;
use app\bo\model\BudgetPermissions;
use app\bo\model\BudgetTable;
use app\bo\model\BudgetTemplate;

class BudgetEntity extends BoModel
{
    protected $searchable;
    protected $templateModel;
    protected $columnModel;
    protected $permissionsModel;
    protected $tableModel;
    protected $member;

    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->templateModel = new BudgetTemplate();
        $this->columnModel = new BudgetColumn();
        $this->permissionsModel = new BudgetPermissions();
        $this->tableModel = new BudgetTable();
        $this->member = $this->getCurrent();
    }

    function saveTemplate($data)
    {
        $member = $this->getCurrent();
        $cols = $data['data'];
        $par = [
            "t_title" => $data['t_title'],
            "t_mid" => $member->m_id,
            "t_mname" => $member->m_name,
            "t_row" => $data['t_row'],
            "t_col" => $data['t_col'],
            "create_time" => time(),
            "update_time" => time(),
        ];
        $result = $this->templateModel->save($par);
        if ($result) {
            $result = $this->columnModel->saveAll($this->formatCols($cols, $this->templateModel->t_id, 1));
        }
        return ($result ? true : false);
    }

    function getTemplateList($limit, $filter = false)
    {
        if($this->member->m_isAdmin != 1){
            $this->templateModel->where("t_mid", "=", $this->member->m_id);
        }
        $this->templateModel->order("create_time desc")->order("update_time desc");
        if ($filter !== false) {

        }
        if ($limit !== false) {
            $list = $this->templateModel->paginate($limit);
        } else {
            $list = $this->templateModel->find();
        }
        return $list;
    }

    function getTemplateByID($id)
    {
        return $this->templateModel->where("t_id", "=", $id)->select();
    }

    function formatCols($cols, $tid, $isTemplate = 0)
    {
        $colsTmp = [];
        foreach ($cols as $key => $value) {
            foreach ($value as $k => $val) {
                $tmp = [
                    "c_col" => $key,
                    "c_row" => $k,
                    "c_value" => $val['val'],
                    "c_colspan" => $val['colSpan'],
                    "c_rowspan" => $val['rowSpan'],
                    "c_display" => $val['display'],
                    "c_isTemplate" => $isTemplate,
                    "c_tid" => $tid,
                ];
                $colsTmp[] = $tmp;
            }
        }
        return $colsTmp;
    }
}