<?php

namespace app\bo\libs;

use think\Model;
use think\Request;

abstract class BoModel extends Model
{
    protected $searchable;

    public function getCurrent()
    {
        return getLoginMember();
    }

    /**
     * @return array
     */
    public function getSearchable()
    {
        $fields = array();
        $operators = array();
        foreach ($this->searchable as $key => $value) {
            $fields[$key] = array("name" => $value['name'], "type" => $value['type']);
            $operators[$key] = $value['operators'];
        }
        return array("fields" => $fields, "operators" => $operators, "length" => count($fields));
    }

    public function getSearchableByKey($key)
    {
        if(empty($key)){
            return false;
        }
        if(!array_key_exists($key, $this->searchable)){
            return false;
        }
        return $this->searchable[$key];
    }

    public function __call($method, $args)
    {
        return parent::__call($method, $args); // TODO: Change the autogenerated stub
    }

    public function getCodeAndNameById($id)
    {
        return ['code' => '', 'name' => ''];
    }

    public function getDataById($id)
    {
        $pk = $this->pk ?: $this->getPk();
        return $this->where($pk, '=', $id)->find()->getData();
    }

}